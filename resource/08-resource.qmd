---
title: "Práctico 8. Índices y Escalas"
subtitle: "Metodología I - Magíster en Ciencias Sociales"
linktitle: "Práctico 8: Índices y Escalas"
date: "2024-06-28"
lang: es
---


```{r setup, include=FALSE, cache = TRUE}
require("knitr")
opts_chunk$set(warning=FALSE,
             message=FALSE,
             echo=TRUE,
             cache = TRUE, fig.width=7, fig.height=5.2)

# install.packages("rmarkdown")
library(rmarkdown)
```


# Objetivos de la práctica

Los objetivos de este ejercicio práctico son:

- Comprender y estimar el proceso de construcción de índices ponderados y no ponderados en R.

- Comprender y estimar el proceso de construcción y validación de escalas en R.

# Índices

## Presentación
El Programa de las Naciones Unidas para el Desarrollo (PNUD) es la agencia de la Organización de
las Naciones Unidas encargada de promover el desarrollo sostenible a nivel mundial, y uno de sus
enfoques es la erradicación de la pobreza. En este contexto, el PNUD reconoce la importancia de
abordar la pobreza multidimensional para lograr un desarrollo sostenible y mejorar el bienestar de
las personas en todas las dimensiones de sus vidas.

Desde el año 2016 Chile cuenta con la medida actual de pobreza multidimensional. El propósito de
esta medida es complementar la medición de la pobreza basada en ingresos con un indicador que
refleje las condiciones de vida de la población en aspectos relevantes para el bienestar social y una vida digna. Desde su creación, se ha buscado obtener un diagnóstico más completo de la pobreza y contar con una herramienta útil para el diseño, implementación, monitoreo y evaluación de políticas públicas.

Inicialmente, la medida de pobreza multidimensional incluyó 4 dimensiones (Educación, Salud,
Trabajo y Seguridad Social, y Vivienda) con tres indicadores por dimensión (12 indicadores en total), cada uno con igual ponderación (8,3%), por lo tanto, con dimensiones cuyo peso representan el 25% de la medida.Posteriormente, con los resultados de la encuesta Casen 2015 se incorpora una quinta dimensión de Redes y Cohesión Social y se amplía la dimensión de Vivienda para incluir el concepto de Entorno. Desde entonces, la medida ha estado compuesta por 5 dimensiones (Educación, Salud, Trabajo y Seguridad Social, Vivienda y Entorno, y Redes y Cohesión Social), manteniendo la definición de 3 indicadores por dimensión, de modo que la medida queda compuesta por 15 indicadores. Respecto del peso de las dimensiones, con el fin de favorecer cierta estabilidad de la medida, la dimensión de Redes y Cohesión Social se incorpora con un peso de 10% y se mantiene la igualdad de ponderación entre las demás dimensiones, ahora con una ponderación de 22,5%.

## Librerías

Cargamos las librerías necesarias:

```{r}
# install.packages("pacman")
library(pacman)

pacman::p_load(tidyverse, #Conjunto de paquetes, sobre todo dplyr y ggplot2
               car, #Para recodificar
               haven,
               summarytools #Para descriptivos
               )

options(scipen = 999) # para desactivar notacion cientifica
rm(list = ls()) # para limpiar el entorno de trabajo
```

## Datos y variables

La base de datos a utilizar es la CASEN 2022 (Encuesta de Caracterización Socioeconómica Nacional). La base de datos está disponible en este [link](https://observatorio.ministeriodesarrollosocial.gob.cl/encuesta-casen-2022#basedatos) y el cuestionario en este [link](https://observatorio.ministeriodesarrollosocial.gob.cl/encuesta-casen-2022#cuestionarios).

Sin embargo, para realizar este ejercicio práctico utilizaremos una muestra aleatoria de esta base de datos para simplificar el proceso de construcción de índices. El código que crea este subset está disponible [acá](https://github.com/cursos-metodos-facso/investigacion-cuantitativa/blob/main/files/subset_casen.R)

### Cargar base de datos

```{r }
load(url("https://github.com/cursos-metodos-facso/investigacion-cuantitativa/raw/main/files/data/casen2022.RData")) #Cargar base de datos
```

### Descripción de variables

```{r eval=FALSE }
view(dfSummary(casen2022, headings=FALSE, graph.col = FALSE))
```

```{r echo=FALSE}
print(dfSummary(casen2022, headings = FALSE, graph.col = FALSE), method = "render")
```


En esta base de datos, las variables de interés que están presentes (ej. asistencia, rezago, escolaridad) son variables dummy, es decir, variables que tienen como valores posibles 0 y 1. Donde 0 implica la ausencia de un atributo y 1 la presencia del mismo atributo.

Para medir pobreza multidimensional, 1 indica la carencia de un servicio o cualidad, por ejemplo, se considera que un hogar es carente en escolaridad si al menos uno de sus integrantes mayores de 18 años ha alcanzado menos años de escolaridad que los establecidos por ley, de acuerdo a su edad. Por lo tanto, en la variable escolaridad 1) indica un hogar carente en escolaridad, que según nuestra base de datos corresponde a 3065 hogares (30.7% de nuestra sub-muestra).

## Medición de pobreza multidimensional en cuatro dimensiones (hasta 2014)

Seleccionamos solo los indicadores que eran utilizados hasta 2014

```{r}
indicadores2014 <- casen2022 %>% select(asistencia, 
                                        rezago, 
                                        escolaridad, 
                                        malnutricion, 
                                        sist_salud, 
                                        atencion, 
                                        ocupacion, 
                                        seg_social, 
                                        jubilacion, 
                                        hacinamiento, 
                                        estado_vivienda=vivienda, 
                                        serv_basicos)  %>% 
  na.omit() %>% # Eliminar Na's
  mutate_all(~(as.numeric(.))) # Convertimos todas las variables a numéricas

```

Con la función *mutate* creamos una nueva variable para cada dimensión, que contenga el promedio simple de los tres indicadores correspondientes.

```{r}
indicadores2014 = indicadores2014 %>% 
  rowwise() %>%
  mutate(educ = mean(c(asistencia, rezago, escolaridad)),
         salud = mean(c(malnutricion, sist_salud, atencion)),
         trabajo= mean(c(ocupacion, seg_social, jubilacion)),
         vivienda= mean(c(hacinamiento, estado_vivienda, serv_basicos))) %>% 
  ungroup()
```

Luego, como la pobreza multidimensional consideraba cuatro dimensiones equivalentes (sin ponderar), es posible obtener el índice de pobreza multidimensional a partir del promedio de las cuatro dimensiones.

```{r}
indicadores2014 = indicadores2014 %>% 
  rowwise() %>%
  mutate(pobreza = mean(c(educ, salud, trabajo, vivienda))) %>% 
  ungroup()
```

Lo que nos da este resultado:

```{r}
indicadores2014 %>% select(pobreza) %>% head(10) # Primeros 10 casos
summary(indicadores2014$pobreza) # Resumen
```

¿Cómo podemos conocer el porcentaje total de pobreza multidimensional del país?

El PNUD considera como límite para el índice de cuatro dimensiones un 25% de pobreza multidimensional (lo que equivale a tener carencia en los tres indicadores de una dimensión). Por lo tanto, podemos utilizar un condicional que indique "si" existe pobreza muldimensional cuando nuestra variable "pobreza" sea mayor o igual a 0.25 y que indique que "no" existe pobreza multidimensional cuando la variable "pobreza" sea menor a 0.25. *case_when* viene en dplyr.

```{r}
indicadores2014 <- indicadores2014 %>% mutate(pobreza = case_when(pobreza>=0.25~"si",
                                                      pobreza<0.25~"no")
                           )
prop.table(table(indicadores2014$pobreza))*100
```

Según el análisis realizado con la submuestra aleatoria de la CASEN, considerando las cuatro dimensiones que se utilizaban hasta el 2014, existe un 12.97% de pobreza multidimensional en Chile


## Medición de pobreza multidimensional en cinco dimensiones (desde 2016)

Veamos ahora el mismo proceso, pero considerando la quinta dimensión que fue agregada en 2016 sobre Redes y Cohesión Social.

En esta operacionalización del índice de pobreza multidimensional las cuatro dimensiones originales equivalen a un 22.5% cada una, mientras que la nueva dimensión de redes y cohesión social equivale a un 10%.

Seleccionemos solo los indicadores que son utilizados desde 2016.

```{r}
indicadores2016 <- casen2022 %>% select(asistencia, 
                                        rezago, 
                                        escolaridad, 
                                        malnutricion, 
                                        sist_salud, 
                                        atencion, 
                                        ocupacion, 
                                        seg_social, 
                                        jubilacion, 
                                        habitabilidad, 
                                        serv_basicos,
                                        entorno,
                                        ap_part_social,
                                        trato,
                                        seguridad,
                                        area,
                                        region) %>% 
  na.omit() %>% # Eliminar Na's
  mutate_all(~(as.numeric(.))) # Convertimos todas las variables a numéricas

```

Seguimos los mismos pasos que con el índice anterior, estimando un promedio simple para cada una de las dimensiones.

```{r}
indicadores2016 = indicadores2016 %>% 
  rowwise() %>%
  mutate(educ = mean(c(asistencia, rezago, escolaridad)),
         salud = mean(c(malnutricion, sist_salud, atencion)),
         trabajo= mean(c(ocupacion, seg_social, jubilacion)),
         vivienda= mean(c(habitabilidad, serv_basicos, entorno)),
         redes_cohesion= mean(c(ap_part_social, trato, seguridad))) %>% 
  ungroup()
```

Sin embargo, como en esta ocasión se trata de un índice ponderado (con dimensiones con distinto peso cada una), multiplicamos cada dimensión por su peso correspondiente y las sumamos.

```{r}
indicadores2016 = indicadores2016 %>% 
  rowwise() %>%
  mutate(pobreza_pond = (educ*22.5) + (salud*22.5) + (trabajo*22.5) + (vivienda*22.5) + (redes_cohesion*10)) %>%  
  ungroup()
```

Lo que nos da este resultado:

```{r}
indicadores2016 %>% select(pobreza_pond) %>% head(10) # Primeros 10 casos
summary(indicadores2016$pobreza_pond) # Resumen
```

¿Cómo podemos conocer el porcentaje total de pobreza multidimensional del país?

El PNUD considera como límite para el índice de cinco dimensiones un 22.5% de pobreza multidimensional (lo que equivale a tener carencia en los tres indicadores de una dimensión). Por lo tanto, podemos utilizar un condicional que indique "si" existe pobreza muldimensional cuando nuestra variable "pobreza" sea mayor o igual a 22.5 y que indique que "no" existe pobreza multidimensional cuando la variable "pobreza" sea menor a 22.5.


```{r}
indicadores2016 <- indicadores2016 %>% mutate(pobreza = case_when(pobreza_pond>=22.5~"si",
                                                      pobreza_pond<22.5~"no")
                           )
                          
prop.table(table(indicadores2016$pobreza))*100
```

Según el análisis realizado con la submuestra aleatoria de la CASEN, considerando las cinco dimensiones que se comenzaron a utilizar en 2016, existe un 15.73% de pobreza multidimensional en Chile.

### Otros

Podemos utilizar otras variables de la CASEN para poder conocer cómo se distribuye la pobreza multidimensional en Chile. Por ejemplo, porcentaje de pobreza multidimensional por región: 

```{r}
prop.table(table(indicadores2016$region, indicadores2016$pobreza), margin = 1)
```

o pobreza multidimensional por zona geográfica 1) urbano 2) rural

```{r}
prop.table(table(indicadores2016$area, indicadores2016$pobreza), margin = 1)
```

# Escalas

## Presentación

Para el taller práctico de hoy utilizaremos la base de datos del estudio de **Martin et al. (2003)**. *Individual differences in uses of humor and and their relation to psychological well-being. Development of the Humor Styles Questionnaire*. 

En este artículo se describe el desarrollo y la validación inicial del Cuestionario de Estilos de Humor, que evalúa cuatro dimensiones relacionadas con las diferencias individuales en el uso del humor. Estas son: usos relativamente benignos del humor para mejorar uno mismo (Autofortalecedor) y para mejorar las relaciones con otros (Afiliativo), uso del humor para mejorar uno mismo a expensas de los demás (Agresivo) y uso del humor para mejorar las relaciones a expensas de uno mismo (Autodestructivo).


## Librerías

Las librerías que utilizaremos esta sesión son las siguientes:

```{r, message=FALSE, warning=FALSE}
# install.packages("pacman") # Cargar sólo si no la tenemos instalada
# library(pacman)
pacman::p_load(tidyverse, # conjunto de paquetes, sobre todo dplyr y ggplot2
               car,       # para recodificar
               psych,     # para Alfa de Chronbach
               sjmisc,    # para descriptivos
               remotes,   # para instalar paquete jogRu
               readr)     # para cargararchivo csv

options(scipen = 999) # para desactivar notacion cientifica
rm(list = ls())       # para limpiar el entorno de trabajo
```

Además, instalaremos la librería `jogRu` desde github, que nos permitirá calcular el alfa de Chronbach para variables ordinales.

```{r, message=FALSE, warning=FALSE}
remotes::install_github("jogrue/jogRu", force = T)
```

::: callout-note
Si pregunta *These packages have more recent versions available. It is recommended to update all of them.Which would you like to update?* SIEMPRE PONER 3: None.
:::


## Datos y variables

Como mencionamos, utilizaremos la base de datos del estudio Martin et al. (2003). *Individual differences in uses of humor and and their relation to psychological well-being. Development of the Humor Styles Questionnaire*.

En estos datos podemos ver una serie de ítems que corresponden a diferentes dimensiones de la escala, donde cada ítem tiene valores entre 1 y 5. De acuerdo con el paper, los ítems se ordenan de esta forma de acuerdo con los tipos de humor:

- afiliativo       : Q1, Q5, Q9 , Q13, Q17, Q21, Q25, Q29
- autofortalecedor : Q2, Q6, Q10, Q14, Q18, Q22, Q26, Q30
- agresivo         : Q3, Q7, Q11, Q15, Q19, Q23, Q27, Q31
- autodestructivo  : Q4, Q8, Q12, Q16, Q20, Q24, Q28, Q32


### Cargar base de datos

```{r }
data <- read.csv(url("https://github.com/cursos-metodos-facso/investigacion-cuantitativa/raw/main/files/data/data.csv"))
```


### Visualización de datos

```{r}
head(data)
str(data)
```


## Procesamiento


### Recodificar

Para que todas las escalas queden en el mismo orden jerárquico, es necesario invertir algunos ítems.

```{r, message=FALSE, warning=FALSE}
data = data %>% 
  mutate_at(vars(Q1, Q9, Q17, Q25, Q29, # afiliativo
                 Q22,                   # autofortalecedor
                 Q7, Q15, Q23, Q31,     # agresivo
                 Q16), ~(6-.)) %>%      # autodestructivo
  mutate(gender = car::recode(.$gender, "0 = NA;
                              1 = 'Hombre'; 2 = 'Mujer'; 3 = 'Otro'")) %>% 
  mutate_at(vars(1:32), ~(ifelse(. < 1 | . > 5, NA, .))) %>% 
  na.omit()
```


### Crear objetos para dimensiones de la escala

Creamos cuatro objetos que contienen los ítems de cada dimensión de la escala.

```{r}
afiliativo       <- data %>% select(Q1, Q5, Q9 , Q13, Q17, Q21, Q25, Q29)
autofortalecedor <- data %>% select(Q2, Q6, Q10, Q14, Q18, Q22, Q26, Q30)
agresivo         <- data %>% select(Q3, Q7, Q11, Q15, Q19, Q23, Q27, Q31)
autodestructivo  <- data %>% select(Q4, Q8, Q12, Q16, Q20, Q24, Q28, Q32)
```


## Explorar datos


### Descriptivos

```{r}
# Medias para cada dimensión
data %>% 
  summarise(Afiliativo = mean(affiliative),
            Autofortalecedor = mean(selfenhancing),
            Agresivo = mean(agressive),
            Autodestructivo = mean(selfdefeating))

# Frecuencias por género
table(data$gender)

# Medias para cada dimensión por género
data %>% group_by(gender) %>% 
  summarise(Afiliativo = mean(affiliative),
            Autofortalecedor = mean(selfenhancing),
            Agresivo = mean(agressive),
            Autodestructivo = mean(selfdefeating))
```



## Análisis

### Estimar correlación

Se debe estimar la correlación de cada dimensión de la escala por separado.

```{r}
# Afiliativo
cor(afiliativo)

# Autofortalecedor
cor(autofortalecedor)

# Agresivo
cor(agresivo)

# Autodestructivo
cor(autodestructivo)
```

Podemos observar que todas las correlaciones son positivas, por lo que no quedaron ítems invertidos.


### Estimar consistencia interna


#### Alfa de Chronbach

Primero, estimaremos la consistencia interna de cada dimensión con un **alfa de Chronbach**. El alfa de Chronbach, es un estadístico que permite estimar la fiabilidad de un test por consistencia interna. Su ventaja es que es fácil de estimar. Sus desventajas, sin embargo, son que:

- Puede aumentarse artificialmente incorporando ítems parecidos;
- Asume que el constructo es unidimensional;
- Es afectado por número de ítems, el número de alternativas de respuesta y la varianza del test (Domínguez-Lara & Merino-Soto, 2015). 
 
Para interpretarlo hay que considerar:
 
- Mínimo para investigación básica exploratoria: > .7
- Mínimo para investigación asociativa: > .8
- Investigación con decisiones muy importantes: > .9 (Nunnally & Bernstein, 1994). 

A mayor valor, más consistente es la escala:

- Consideraremos el 0.6 como punto de corte.

::: callout-note
ADVERTENCIA: el alfa de Chronbarch es para variables con nivel de medición intervalar. Lo óptimo para variables ordinales es Alfa Ordinal u Omega (Ventura-León & Caycho-Rodríguez, 2017).
:::

Asimismo, esperamos que la correlación de cada ítem respecto del total sea al menos de .4 (media) y, ojalá, de al menos .6 (alta). Ítems con correlaciones muy bajas podrían eliminarse, especialmente si el alfa de Chronbach aumenta en caso de que el ítem sea eliminado. 


```{r}
psych::alpha(afiliativo)
psych::alpha(autofortalecedor)
psych::alpha(agresivo)
psych::alpha(autodestructivo)

# Para toda la escala 
psych::alpha(data %>% select(1:32))
```


#### Alfa Ordinal

Como se señaló, el alfa de Chronbach está diseñado para variables continuas. Por ello, podemos calcular el alfa ordinal para las puntuaciones de cada ítem. Para esto, utilizaremos la función `ordinal_alpha()`de `jogRu`, que estima el alfa ordinal a partir de correlación policórica (según lo propuesto por Zumbo et al.(2007)). 

```{r}
jogRu::ordinal_alpha(afiliativo)
jogRu::ordinal_alpha(autofortalecedor)
jogRu::ordinal_alpha(agresivo)
jogRu::ordinal_alpha(autodestructivo)

# Para toda la escala 
jogRu::ordinal_alpha(data %>% select(1:32))
```






